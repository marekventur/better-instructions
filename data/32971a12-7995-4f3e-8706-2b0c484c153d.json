{
  "id": "32971a12-7995-4f3e-8706-2b0c484c153d",
  "instruction": "Generate a program that can find the longest pallindrome in a given string",
  "input": "String = \"ababad\"",
  "output": "def longestPallindrome(string):\n \n    #Check if string is empty\n    if (len(string) == 0):\n        return \"\"\n \n    #Define a data structure and store the length of the longest pallindrome\n    pallindromes = [[0 for x in range(len(string))] for y in range(len(string))]\n    max_length = 0\n    start_pos = 0\n    #Calculate the longest pallindrome\n    for i in range(len(string)):\n        pallindromes[i][i] = 1\n        for j in range(i):\n            if (string[j] == string[i] and (pallindromes[j+1][i-1] or i-j == 1)):\n                pallindromes[j][i] = 1\n                if (max_length < i - j + 1):\n                    max_length = i-j + 1\n                    start_pos = j\n \n    return string[start_pos:start_pos+max_length]",
  "license": "stanford-alpaca-unknown",
  "generation-type": "openai-text-davinci-003",
  "generation-reference": "https://github.com/tatsu-lab/stanford_alpaca/blob/main/alpaca_data.json",
  "modified": [],
  "verified": [],
  "tags": []
}