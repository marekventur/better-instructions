{
  "id": "67f57884-df41-4e43-abe1-82e82e258a1b",
  "instruction": "Given an input string and a dictionary, create a function find longest word in dictionary that is a subsequence of the given string.",
  "input": "Input string: abpppl\nDictionary: [able, apple, sample, abppl, pl]",
  "output": "def findLongestWord(string, dict): \n    maxLen = 0\n    result = \"\" \n\n    for word in dict: \n        if isSubsequence(word, string): \n            if len(word) > maxLen: \n                maxLen = len(word) \n                result = word  \n  \n    return result",
  "license": "stanford-alpaca-unknown",
  "generation-type": "openai-text-davinci-003",
  "generation-reference": "https://github.com/tatsu-lab/stanford_alpaca/blob/main/alpaca_data.json",
  "modified": [],
  "verified": [],
  "tags": []
}