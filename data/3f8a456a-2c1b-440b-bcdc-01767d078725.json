{
  "id": "3f8a456a-2c1b-440b-bcdc-01767d078725",
  "instruction": "Given two strings, find and return the longest common substring.",
  "input": "str1 = \"abcdef\"\nstr2 = \"abcxyz\"",
  "output": "# Program to find Longest Common Substring\n\ndef longest_common_substring(str1, str2):\n  # calculate the length of both strings\n  l1 = len(str1)\n  l2 = len(str2)\n\n  # initialise a matrix with all 0s\n  matrix = [[0 for x in range(l2+1)] for x in range(l1+1)]\n\n  # mark 1 for each common letter in both strings\n  for i in range(l1):\n    for j in range(l2):\n      if str1[i] == str2[j]:\n        matrix[i+1][j+1] = matrix[i][j] + 1\n      else:\n        matrix[i+1][j+1] = 0\n\n  # get the maximum length of common substring \n  result = 0\n  for i in range(l1+1):\n    for j in range(l2+1):\n      result = max(result, matrix[i][j])\n\n  # return the result\n  return result\n\n# Driver program\nstr1 = \"abcdef\"\nstr2 = \"abcxyz\"\nresult = longest_common_substring(str1, str2)\n\nprint(\"The longest common substring is:\", result) # Prints 3",
  "license": "stanford-alpaca-unknown",
  "generation-type": "openai-text-davinci-003",
  "generation-reference": "https://github.com/tatsu-lab/stanford_alpaca/blob/main/alpaca_data.json",
  "modified": [],
  "verified": [],
  "tags": []
}