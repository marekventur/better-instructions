{
  "id": "b6c43159-5511-4482-b4d3-cc71c051d59b",
  "instruction": "Code a function to determine if two strings are anagrams of each other.",
  "input": "",
  "output": "def isAnagram(string1, string2): \n  \n    # Make sure both strings are of the same length \n    if len(string1) != len(string2): \n        return False\n  \n    # Dictionary to store frequency of characters in string1 \n    count = [0] * 26\n  \n    # For each character in string1 increment its frequency \n    for i in range(len(string1)): \n        count[ord(string1[i]) - ord('a')] += 1\n  \n    # For each character in string2 decrement its frequency \n    for i in range(len(string2)): \n        count[ord(string2[i]) - ord('a')] -= 1\n  \n    # If any frequency reaches a negative value, \n    # then strings can't be anagrams \n    for i in range(len(count)): \n        if count[i] < 0: \n            return False\n  \n    # If all frequencies are zero, string1 and string2 \n    # are anagrams of each other \n    return True",
  "license": "stanford-alpaca-unknown",
  "generation-type": "openai-text-davinci-003",
  "generation-reference": "https://github.com/tatsu-lab/stanford_alpaca/blob/main/alpaca_data.json",
  "modified": [],
  "verified": [],
  "tags": []
}