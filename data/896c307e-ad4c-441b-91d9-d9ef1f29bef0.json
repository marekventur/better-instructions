{
  "id": "896c307e-ad4c-441b-91d9-d9ef1f29bef0",
  "instruction": "Write a function to find the longest common substring of two strings.",
  "input": "",
  "output": "def longest_common_substring(s1, s2):\n    # Initialize the string lengths.\n    m = len(s1)\n    n = len(s2)\n  \n    # Initialize the longest common substring \n    result = \"\"\n  \n    # Start from the lengths of two strings  \n    # and set two indices\n    for i in range(m): \n        for j in range(n): \n  \n            # Initialize counter \n            count = 0\n  \n            # Find the longest common substring \n            while (i + count < m and \n                   j + count < n and \n                   s1[i + count] == s2[j + count]): \n                count+= 1\n  \n            # Updates the longest common substring \n            if count > len(result): \n                result = s1[i:i + count] \n    return result",
  "license": "stanford-alpaca-unknown",
  "generation-type": "openai-text-davinci-003",
  "generation-reference": "https://github.com/tatsu-lab/stanford_alpaca/blob/main/alpaca_data.json",
  "modified": [],
  "verified": [],
  "tags": []
}